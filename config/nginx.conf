charset utf-8;

server {
    listen 80;
    server_name iekava.lv *.iekava.lv;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name iekava.lv *.iekava.lv;

    ssl_certificate /etc/letsencrypt/live/iekava.lv/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/iekava.lv/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    set $subdomain "@";
    if ($host ~ ^([^.]+)\.iekava\.lv$) {
        set $subdomain $1;
    }

    location / {
        content_by_lua_block {
            local subdomain = ngx.var.subdomain or "@"
            local config_path = "/home/mikelis.kalme/iekava.lv/webserver/" .. subdomain .. "/config.lua"
            local static_page_server_path = "/home/mikelis.kalme/iekava.lv/script/static_page_server.lua"

            local chunk, load_err = loadfile(config_path)
            if chunk then
                local ok, run_err = pcall(chunk)
                if not ok then
                    ngx.log(ngx.ERR, "Error running config.lua: ", run_err)
                end
            else
                local static_chunk, static_err = loadfile(static_page_server_path)
                if not static_chunk then
                    ngx.log(ngx.ERR, "Failed to load static_page_server.lua: ", static_err)
                end

                local static_page_server = static_chunk()
                local base_path = "/home/mikelis.kalme/iekava.lv/webserver/" .. subdomain .. "/web"
                local error_base_path = "/home/mikelis.kalme/iekava.lv/error"
                static_page_server(base_path, error_base_path)
            end
        }
    }
}